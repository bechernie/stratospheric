name: 03 - Manually create a Todo-App environment

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment to create'
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  deploy-network-stack:
    runs-on: ubuntu-20.04
    name: Deploy the network stack
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: NPM install
        working-directory: cdk
        run: npm install

  deploy-sequencer-lambda:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    name: Deploy the Deployment Sequencer
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: NPM install CDK dependencies
        working-directory: cdk
        run: npm install

      - name: NPM install Deployment Sequencer dependencies
        working-directory: cdk/deployment-sequencer-lambda
        run: npm install

      - name: Build Deployment Sequencer
        working-directory: cdk/deployment-sequencer-lambda
        run: npm run dist

      - name: Deploy Deployment Sequencer
        working-directory: cdk
        run: npm run deployment-sequencer:deploy -- -c environmentName=${{ github.event.inputs.environmentName }} -c githubToken=${{ secrets.GH_API_TOKEN }}

      # TODO